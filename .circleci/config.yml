jobs:
  build:
    docker:
      - image: circleci/rust:1.36-buster

    steps:
      - checkout
      - run:
          name: "Setup shell environment"
          command: |
            # Since we run the scripts as root the rustup and cargo
            # homes are located under /usr/local/.
            echo 'export RUSTUP_HOME=$HOME/.rustup' >> $BASH_ENV
            echo 'export CARGO_HOME=$HOME/.cargo' >> $BASH_ENV

            # Alias `cargo` to `cargo --locked` to avoid inadvertant
            # updates to `Cargo.lock`.
            echo 'function cargo () { /usr/local/cargo/bin/cargo --locked "$@"; }' >> $BASH_ENV
      - restore_cache:
          keys:
          - rustup-v1-{{ checksum "rust-toolchain" }}-{{ checksum "scripts/rustup-setup" }}
      - run:
          name: Setup toolchain
          command: ./tools/rustup-setup
      - save_cache:
          key: rustup-v1-{{ checksum "rust-toolchain" }}-{{ checksum "scripts/rustup-setup" }}
          paths:
            - "~/.rustup"

      - restore_cache:
          keys:
          - cargo-target-v1-{{ checksum "Cargo.lock" }}
      - run:
          name: Check formatting
          command: |
            cargo fmt --all -- --check
      - run:
          name: Clippy
          command: |
            cargo clippy --all --all-targets -- -D warnings
      - run:
          name: Build
          command: |
            RUSTFLAGS="-D warnings" cargo build --all
      - run:
          name: Test
          command: |
            cargo test --all --color=always

      - save_cache:
          # "epoch" is here to ensure that we upload a new cache on each build
          key: cargo-target-v1-{{ checksum "Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
